// Generated by CoffeeScript 1.3.3
(function() {

  describe("Model.Relation", function() {
    var Album, Photo;
    Album = void 0;
    Photo = void 0;
    beforeEach(function() {
      Album = Spine.Model.setup("Album", ["name"]);
      return Photo = Spine.Model.setup("Photo", ["name"]);
    });
    it("should honour hasMany associations", function() {
      var album;
      Album.hasMany("photos", Photo);
      Photo.belongsTo("album", Album);
      album = Album.create();
      expect(album.photos()).toBeTruthy();
      expect(album.photos().all()).toEqual([]);
      album.photos().create({
        name: "First Photo"
      });
      expect(Photo.first()).toBeTruthy();
      expect(Photo.first().name).toBe("First Photo");
      return expect(Photo.first().album_id).toBe(album.id);
    });
    it("should honour belongsTo associations", function() {
      var album, photo;
      Album.hasMany("photos", Photo);
      Photo.belongsTo("album", Album);
      expect(Photo.attributes).toEqual(["name", "album_id"]);
      album = Album.create({
        name: "First Album"
      });
      photo = Photo.create({
        album: album
      });
      expect(photo.album()).toBeTruthy();
      return expect(photo.album().name).toBe("First Album");
    });
    it("should load nested Singleton record", function() {
      var album;
      Album.hasOne("photo", Photo);
      Photo.belongsTo("album", Album);
      album = new Album();
      album.load({
        id: "1",
        name: "Beautiful album",
        photo: {
          id: "2",
          name: "Beautiful photo",
          album_id: "1"
        }
      });
      expect(album.photo()).toBeTruthy();
      return expect(album.photo().name).toBe("Beautiful photo");
    });
    return it("should load nested Collection records", function() {
      var album;
      Album.hasMany("photos", Photo);
      Photo.belongsTo("album", Album);
      album = new Album();
      album.load({
        id: "1",
        name: "Beautiful album",
        photos: [
          {
            id: "1",
            name: "Beautiful photo 1",
            album_id: "1"
          }, {
            id: "2",
            name: "Beautiful photo 2",
            album_id: "1"
          }
        ]
      });
      expect(album.photos()).toBeTruthy();
      expect(album.photos().all().length).toBe(2);
      expect(album.photos().first().name).toBe("Beautiful photo 1");
      return expect(album.photos().last().name).toBe("Beautiful photo 2");
    });
  });

}).call(this);
